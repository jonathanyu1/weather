(()=>{"use strict";(()=>{let e="metric",t="toronto";const r=document.querySelector("#searchInput"),n=document.querySelector("#btnSearch"),o=document.querySelector("#btnChangeUnit"),c=document.querySelector("#errorInput"),i=async r=>{try{let n=await(async e=>{try{const t=await fetch(e,{mode:"cors"}),r=await t.json(),n={};return n.city=r.name,n.country=r.sys.country,n.lat=r.coord.lat,n.lon=r.coord.lon,n}catch(e){console.log("error: "+e)}})(`https://api.openweathermap.org/data/2.5/weather?q=${r}&units=${e}&APPID=107629179ef66f70931a8e42d89f5115`),o=await(async e=>{try{const t=await fetch(e,{mode:"cors"}),r=await t.json(),n={};return n.temp=r.current.temp,n.description=r.current.weather[0].description,n.iconCode=r.current.weather[0].icon,n.feelsLike=r.current.feels_like,n.humidity=r.current.humidity,n.windSpeed=r.current.wind_speed,n.daily=r.daily,n.daily.shift(),n}catch(e){console.log("error: "+e)}})(`https://api.openweathermap.org/data/2.5/onecall?lat=${n.lat}&lon=${n.lon}&units=${e}&appid=107629179ef66f70931a8e42d89f5115`);o.city=n.city,o.country=n.country,t=n.city,((e,t)=>{let r="",n="";"metric"==t?(r="°C",n="km/h"):"imperial"==t&&(r="°F",n="mph");const o=document.querySelector("#weatherLocation"),c=document.querySelector("#weatherDescription"),i=document.querySelector("#weatherTemp"),a=document.querySelector("#weatherIcon");var d;o.innerHTML=`${e.city}, ${e.country}`,c.innerHTML=`${d=e.description,d.replace(/(^\w{1})|(\s+\w{1})/g,(e=>e.toUpperCase()))}`,i.innerHTML=`${Math.round(e.temp)} ${r}`,a.src=`http://openweathermap.org/img/wn/${e.iconCode}@4x.png`;const u=document.querySelector("#feelsLikeTemp"),l=document.querySelector("#humidityTemp"),y=document.querySelector("#windSpeedTemp");u.innerHTML=`${Math.round(e.feelsLike)} ${r}`,l.innerHTML=`${e.humidity}%`,y.innerHTML=`${Math.round(10*e.windSpeed)/10} ${n}`;const s=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];e.daily.forEach(((e,t)=>{let n=new Date(1e3*e.dt),o=s[n.getDay()];const c=document.querySelector(`#day${t}Name`),i=document.querySelector(`#day${t}High`),a=document.querySelector(`#day${t}Low`),d=document.querySelector(`#day${t}Icon`);c.innerHTML=`${o}`,i.innerHTML=`${Math.round(e.temp.max)} ${r}`,a.innerHTML=`${Math.round(e.temp.min)} ${r}`,d.src=`http://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`}))})(o,e),c.style.visibility="hidden"}catch(e){console.log("error: "+e),c.style.visibility="visible"}};i("toronto"),n.addEventListener("click",(()=>{i(r.value),r.value=""})),r.addEventListener("keypress",(function(e){"Enter"===e.key&&(i(r.value),r.value="")})),o.addEventListener("click",(function(r){const n=document.querySelector("#metricLabel"),o=document.querySelector("#imperialLabel");"metric"==e?(e="imperial",n.style.fontWeight="normal",o.style.fontWeight="1000"):"imperial"==e&&(e="metric",n.style.fontWeight="1000",o.style.fontWeight="normal"),i(t)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,